Description: >
    dekaido
    Script for IAM roles

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:
    # instance profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
    # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
    # in this example, I create a Role called UdacityS3ReadOnlyEC2 and just give it a policy of S3 Read-Only Access
    
    UdacityS3ReadOnlyEC2:
        Type: AWS::IAM::Role
        Properties: 
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: 'Allow'
                     Principal:
                        Service:
                            - 'ec2.amazonaws.com'
                     Action:
                        - 'sts:AssumeRole'
            Path: '/'
    
    WebAppProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: '/'
            Roles:
                - UdacityS3ReadOnlyEC2

Output:
    WebAppRoleArn:
        Value: !GetAttn UdacityS3ReadOnlyEC2.Arn
        Export:
            Name: !Sub ${EnvironmentName}-IAM-ARN